# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Builld and Unit Test

on:
  push:
    branches: [ "main", "dev-prateek" ]
  pull_request:
    branches: [ "main" ]

jobs:
  analysis:

      runs-on: ubuntu-latest
      permissions:
        contents: write
        pull-requests: write

      steps:
      - uses: actions/checkout@v3

      - name: 'Print manual run reason'
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo 'Reason: ${{ github.event.inputs.reason }}'

      - name: .NET code metrics
        id: dotnet-code-metrics
        uses: dotnet/samples/github-actions/DotNet.GitHubAction@main
        env:
          GREETINGS: 'Hello, .NET developers!' # ${{ secrets.GITHUB_TOKEN }}
        with:
          owner: ${{ github.repository_owner }}
          name: ${{ github.repository }}
          branch: ${{ github.ref }}
          dir: ${{ './github-actions/DotNet.GitHubAction' }}
        
      - name: Create pull request
        uses: peter-evans/create-pull-request@v4
        if: ${{ steps.dotnet-code-metrics.outputs.updated-metrics }} == 'true'
        with:
          title: '${{ steps.dotnet-code-metrics.outputs.summary-title }}'
          body: '${{ steps.dotnet-code-metrics.outputs.summary-details }}'
          commit-message: '<Project Name>-<Sprint-Details> - Information'
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Checkout Code
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build "lanternAPI/lanternApi.sln" --no-restore
    - name: Test
      run: dotnet test "lantern.tests/lantern.tests.csproj" --no-build --verbosity normal
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with:
        xunit_files: "TestResults/**/*.xml"
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
